        -:    0:Source:src/time_zone_lookup.cc
        -:    0:Graph:/home/yfy/iut/benchmarks/cctz/time_zone_lookup.gcno
        -:    0:Data:/home/yfy/iut/benchmarks/cctz/time_zone_lookup.gcda
        -:    0:Runs:15
        -:    0:Programs:1
        -:    1:// Copyright 2016 Google Inc. All Rights Reserved.
        -:    2://
        -:    3:// Licensed under the Apache License, Version 2.0 (the "License");
        -:    4:// you may not use this file except in compliance with the License.
        -:    5:// You may obtain a copy of the License at
        -:    6://
        -:    7://   http://www.apache.org/licenses/LICENSE-2.0
        -:    8://
        -:    9://   Unless required by applicable law or agreed to in writing, software
        -:   10://   distributed under the License is distributed on an "AS IS" BASIS,
        -:   11://   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        -:   12://   See the License for the specific language governing permissions and
        -:   13://   limitations under the License.
        -:   14:
        -:   15:#include "time_zone.h"
        -:   16:
        -:   17:#include <cstdlib>
        -:   18:
        -:   19:#include "time_zone_impl.h"
        -:   20:
        -:   21:namespace cctz {
        -:   22:
function _ZN4cctz13utc_time_zoneEv called 180 returned 100% blocks executed 71%
      180:   23:time_zone utc_time_zone() {
      180:   24:  time_zone tz;
      540:   25:  load_time_zone("UTC", &tz);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
      180:   26:  return tz;
        -:   27:}
        -:   28:
function _ZN4cctz15local_time_zoneEv called 0 returned 0% blocks executed 0%
    #####:   29:time_zone local_time_zone() {
        -:   30:#if defined(_WIN32) || defined(_WIN64)
        -:   31:  char* tz_env = nullptr;
        -:   32:  _dupenv_s(&tz_env, nullptr, "TZ");
        -:   33:  const char* zone = tz_env;
        -:   34:#else
    #####:   35:  const char* zone = std::getenv("TZ");
call    0 never executed
        -:   36:#endif
    #####:   37:  if (zone != nullptr) {
branch  0 never executed
branch  1 never executed
    #####:   38:    if (*zone == ':') ++zone;
branch  0 never executed
branch  1 never executed
        -:   39:  } else {
        -:   40:    zone = "localtime";
        -:   41:  }
    #####:   42:  time_zone tz;
    #####:   43:  if (!load_time_zone(zone, &tz)) {
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
branch  4 never executed
branch  5 never executed
call    6 never executed
    #####:   44:    load_time_zone("UTC", &tz);
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
        -:   45:  }
        -:   46:#if defined(_WIN32) || defined(_WIN64)
        -:   47:  free(tz_env);
        -:   48:#endif
    #####:   49:  return tz;
        -:   50:}
        -:   51:
function _ZN4cctz14load_time_zoneERKSsPNS_9time_zoneE called 2195405 returned 99% blocks executed 100%
  2195405:   52:bool load_time_zone(const std::string& name, time_zone* tz) {
  2195405:   53:  return time_zone::Impl::LoadTimeZone(name, tz);
call    0 returned 99%
        -:   54:}
        -:   55:
function _ZNK4cctz9time_zone6lookupERKNSt6chrono10time_pointINS1_3_V212system_clockENS1_8durationIlSt5ratioILl1ELl1EEEEEE called 1275 returned 100% blocks executed 100%
     1275:   56:time_zone::absolute_lookup time_zone::lookup(
        -:   57:    const time_point<sys_seconds>& tp) const {
     1275:   58:  return time_zone::Impl::get(*this).BreakTime(tp);
call    0 returned 100%
call    1 returned 100%
        -:   59:}
        -:   60:
function _ZNK4cctz9time_zone6lookupERKNS_6detail10civil_timeINS1_10second_tagEEE called 645 returned 100% blocks executed 100%
      645:   61:time_zone::civil_lookup time_zone::lookup(const civil_second& cs) const {
      645:   62:  return time_zone::Impl::get(*this).MakeTimeInfo(cs);
call    0 returned 100%
call    1 returned 100%
        -:   63:}
        -:   64:
        -:   65:}  // namespace cctz
