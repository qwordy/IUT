#!/bin/bash

# commands for Incrementing Unit Testing
# author: Ye Jiabin
# currently only gradle project is supported

IUT_HOME=$HOME/.iut
JAVA_CMD=java
TEST_CASES_FILE="iut-test"
TEST_RUNNER="cn.edu.sjtu.SingleJUnitTestRunner"
# TEST_RUNNER_CP=$IUT_HOME/TestRunner:$HOME/.gradle_home/gradle-2.3/lib/plugins/junit-4.11.jar
TEST_RUNNER_CP=$IUT_HOME/TestRunner:$IUT_HOME/TestRunner/junit-4.11.jar

ConfigFile="iut.json"
PROJ_NAME="null"

function getProjName {
	if [ ! -f $ConfigFile ]; then
		echo "cannot find iut.json."
	else
		str=$( cat ${ConfigFile} | grep { | grep type | awk -F : '{print $2}')
		str=${str:2}
		PROJ_NAME=${str%\"*}
	fi
	
 }

function getTestCasesFile {
	getProjName
	TEST_CASES_FILE="$IUT_HOME/projects/$PROJ_NAME/iut-test"
}


function runtest {
    export CLASSPATH=$TEST_RUNNER_CP
    echo $1
    $JAVA_CMD $TEST_RUNNER $1
    # if [ -f $1 ]; then
    #     testCaseCount=$( grep -v "^:" $1 | wc -l )
    #     testCaseNo=1
    #     cat $1 | \
    #     while read line; do
    #         if [[ $line == :* ]]; then
    #             export CLASSPATH=$TEST_RUNNER_CP$line
    #         else
    #             export IUT_TEST_ID=$( echo $line | tr "#" "." )
    #             cmd="$JAVA_CMD $TEST_RUNNER $line"
    #             $cmd
    #             if test $? -ne 0; then
    #                 echo "$testMethod failed!"
    #             fi
    #             printf "Testing %0.30s %d/%d\r" "$testMethod" "$testCaseNo" "$testCaseCount"
    #             testCaseNo=$(( $testCaseNo+1 ))
    #         fi
    #     done
    #     printf "All $testCaseCount test case(s) completed!\n"
    # else
    #     echo "file iut-test not found! Please run iut gentest"
    # fi
}

if [ $# == 0 ]; then
    $0 -h
    exit 0
fi 


case "$1" in
    

    -i)  #init
        if [ -f "iut.json" ]; then
            echo "iut.json already exists!"
        else
            if [ -z $2 ]; then
                echo "Please specify a project name"
                exit 1
            fi
            projectName=$2
            projectDir="$IUT_HOME/projects/$projectName"

            if [ -d $projectDir ]; then
                echo "Project $projectDir exists!"
                exit 1
            fi

            mkdir -p $projectDir
            dbFile="$projectDir/iut.db"

            # if [ -d $
            srcDirs=$( gradle -q listSrcDirs | sed -n -e 'H;${x;s/\n/","/g;s/^","//;p;}' )
            #iut.json also put into projects folder
            cat > "iut.json" <<EOF 
{   "type": "$projectName",
    "project" : "iut",
    "srcdirs" : ["$srcDirs"],
    "database": {
        "type": "sqlite",
        "host" : "$dbFile",
        "db" : "iut",
        "username" : "iut",
        "password" : "iut"
    }
}    
EOF
            cat $IUT_HOME/iut.sql | sqlite3 $dbFile
            # mkdir iutlogs
        fi
        ;;

    -r) #remove
        if [ -z $2 ]; then
            echo "Please specify a project name"
            exit 1
        fi
        projectName=$2
        projectDir="$IUT_HOME/projects/$projectName"
        testCaseFileInDir="$2/$TEST_CASES_FILE"
        # rm -f iut.json $TEST_CASES_FILE iutlogs
        rm -f iut.json $testCaseFileInDir iutlogs
        rm -r $projectDir 
        ;;

    -c) #preproc coverage
			if [ -z $2 ]; then
                echo "Please specify a project name"
                exit 1
      fi
      projectName=$2
      projectDir="$IUT_HOME/projects/$projectName"
			echo "Preprocessing $projectName : instrumentation -> run testcases -> update database"
			echo $PWD
			echo "inst..."
			if [ -d "$PWD.inst" ]; then #if inst dir already exists
				echo "$PWD.inst exists. Removing it."
				rm -rf "$PWD.inst"
			fi

			$0 inst #inst
			if [ $? -ne 0 ];then
				echo "$0 inst failed"
			fi
			cd $PWD".inst" #cd into inst
			echo "gentest..."
			$0 gentest $projectDir #gentest
			if [ $? -ne 0 ];then
				echo "$0 gentest failed"
			fi
			echo "testall..."
			$0 testall $projectDir #testall
			if [ $? -ne 0 ];then
				echo "$0 testall failed"
			fi
			echo "update..."
			$0 update #update
			if [ $? -ne 0 ];then
				echo "$0 update failed"
			fi

			echo "Preprocessing completed."


			;;
		-s) #increm select
			if [ $# -ne 4 ];then
				echo "The $1 command requires 3 parameters, which are  <projectName> <oldVersionPath> <newVersionPath>"
				exit 1
			fi
			if [ ! $3 ] || [ ! $4 ]; then
				echo "Require the absolute path of BOTH the OLD version and the NEW version!"
				exit 2
			else
				if [ ! -d $3 ] || [ ! -d $4 ]; then
					echo "$3 or $4 doesn't exist!"
					exit 3
				fi
			fi
			projectName=$2
      projectDir="$IUT_HOME/projects/$projectName"
      if [ !  -d $projectDir ]; then
      	echo "No such project!"
      	exit 4
      fi

			echo "Incremental unit testing $2 : diff to find changed methods -> query for affected testcases -> run affected testcases"
			cd $1
			echo "diff..."
			$0 diff $3 $4 #diff
			if [ $? -ne 0 ];then
				echo "$0 diff failed"
			fi

			echo "itest..."
			$0 itest $projectDir #itest
			if [ $? -ne 0 ];then
				echo "$0 itest failed"
			fi

			echo "Incremental testing completed."

			;;

    gentest)
        gradle testClasses
				testCaseFileInDir="$2/$TEST_CASES_FILE"
        # gradle -q listJUnitTestCases > $TEST_CASES_FILE #need to modify
        gradle -q listJUnitTestCases > $testCaseFileInDir
        if test $? -ne 0; then #exit code != 0
            # rm -f $TEST_CASES_FILE
            rm -f $testCaseFileInDir
        fi
        ;;
    itest)
				testCaseFileInDir="$2/$TEST_CASES_FILE"
        # cmd="$JAVA_CMD -cp $TEST_RUNNER_CP cn.edu.sjtu.TestCaseGenerator $TEST_CASES_FILE affected-test-case"
        cmd="$JAVA_CMD -cp $TEST_RUNNER_CP cn.edu.sjtu.TestCaseGenerator $testCaseFileInDir affected-test-case"
        testCaseNo=1
        $cmd > "tmp-test-case"
        runtest "tmp-test-case"
        ;;
    testall)
				testCaseFileInDir="$2/$TEST_CASES_FILE"
        # echo $TEST_CASES_FILE
        echo $testCaseFileInDir
        rm -f iutlogs
        # runtest $TEST_CASES_FILE
        runtest $testCaseFileInDir
        ;;

    
    -h) #help
    echo "Usage: 
    iutj -i
    iutj -c
    iutj -s
    iutj -h
    iutj -r
    "
    ;;
    *)
        
        $JAVA_CMD -Xmx3072M -jar $IUT_HOME/iut.jar ${@:1} 
esac




